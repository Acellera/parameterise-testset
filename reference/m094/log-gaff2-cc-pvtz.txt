
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
An error has occurred python-side. Traceback (most recent call last):

  File "<string>", line 53, in <module>

TypeError: 'NoneType' object is not iterable
Optimizer: Optimization complete!
New linear angles
New linear angles
An error has occurred python-side. Traceback (most recent call last):

  File "<string>", line 53, in <module>

TypeError: 'NoneType' object is not iterable
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Please cite -- HTMD: High-Throughput Molecular Dynamics for Molecular Discovery
J. Chem. Theory Comput., 2016, 12 (4), pp 1845-1852. 
http://pubs.acs.org/doi/abs/10.1021/acs.jctc.6b00049


You are on the latest HTMD version (unpackaged : /home/mjharvey/working/acellera/htmd/htmd).
 === Parameterizing input.mol2 ===

Dihedral 0: 10-7-4-8
 Has equivalent dihedrals through symmetry: 
 Dihedral 10-7-4-9
Dihedral 1: 8-4-2-1
 Has equivalent dihedrals through symmetry: 
 Dihedral 9-4-2-1
Dihedral 2: 4-2-1-3
Net Charge: 0
Equivalent atom groups:
 O1
 C1
 C2
 C3
 C4
 H1 H2
 C5
 H3 H4
 C6
 H5 H6
 H7 H8 H9
 H10 H11 H12
Soft dihedrals:
 C6 C5 C4 H3
 H3 C4 C2 C1
 C4 C2 C1 C3

 == Minimizing ==



 == Charge fitting ==


Charge Chi^2 score : 0.018777 : GOOD
QM Dipole   : 1.421800 2.717200 0.689800 ; 3.143300
MM Dipole   : 1.433670 2.803759 0.144277 ; 3.152347
Dipole Chi^2 score : 0.000082 : GOOD


 == Fitting torsion C6-C5-C4-H3 ==

Duplicating types..
Creating new type c3_0 from c3 for atom C6
Creating new type c3_1 from c3 for atom C5
Creating new type c3_2 from c3 for atom C4
Creating new type hc_0 from hc for atom H3
 Dih C6-C5-C4-H3 and C6-C5-C4-H3 are equivalent 
 Dih C6-C5-C4-H3 and C6-C5-C4-H4 are equivalent 


Torsion C6-C5-C4-H3 Chi^2 score : 0.214346 : GOOD

 == Fitting torsion H3-C4-C2-C1 ==

Duplicating types..
Creating new type c3_3 from c3 for atom C2
Creating new type c_0 from c for atom C1
 Dih H3-C4-C2-C1 and H3-C4-C2-C1 are equivalent 
 Dih H3-C4-C2-C1 and H4-C4-C2-C1 are equivalent 


Torsion H3-C4-C2-C1 Chi^2 score : 4.703992 : GOOD

 == Fitting torsion C4-C2-C1-C3 ==

Duplicating types..
Creating new type c3_4 from c3 for atom C3
 Dih C4-C2-C1-C3 and C4-C2-C1-C3 are equivalent 


Torsion C4-C2-C1-C3 Chi^2 score : 0.073090 : GOOD
 == Diagnostic Energies == 

 Bond     : 0.765863
 Angle    : 0.730222
 Dihedral : 4.124899
 Improper : 0.000000
 Electro  : -79.068240
 VdW      : 0.801399


 == Output to parameters/GAFF2/cc-pVTZ ==

