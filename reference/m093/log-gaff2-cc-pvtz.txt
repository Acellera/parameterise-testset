
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Optimizer: Optimization complete!
Please cite -- HTMD: High-Throughput Molecular Dynamics for Molecular Discovery
J. Chem. Theory Comput., 2016, 12 (4), pp 1845-1852. 
http://pubs.acs.org/doi/abs/10.1021/acs.jctc.6b00049


You are on the latest HTMD version (unpackaged : /home/mjharvey/working/acellera/htmd/htmd).
 === Parameterizing input.mol2 ===

Dihedral 0: 5-2-1-0
 Has equivalent dihedrals through symmetry: 
 Dihedral 6-2-1-0
Dihedral 1: 5-2-4-7
 Has equivalent dihedrals through symmetry: 
 Dihedral 6-2-4-7
Dihedral 2: 2-4-7-11
 Has equivalent dihedrals through symmetry: 
 Dihedral 12-7-4-2
Dihedral 3: 11-7-10-14
 Has equivalent dihedrals through symmetry: 
 Dihedral 11-7-10-15
 Dihedral 12-7-10-14
 Dihedral 12-7-10-15
Net Charge: 0
Equivalent atom groups:
 O1
 C1
 C2
 C3
 C4
 H1 H2
 C5
 H3 H4
 C6
 H5 H6
 C7
 H7 H8
 H9 H10 H11
 H12 H13 H14
Soft dihedrals:
 H1 C2 C1 O1
 H1 C2 C4 C5
 C2 C4 C5 H5
 H5 C5 C6 H7

 == Minimizing ==



 == Charge fitting ==


Charge Chi^2 score : 0.022899 : GOOD
QM Dipole   : 1.099100 -2.909400 0.630000 ; 3.173300
MM Dipole   : 1.134164 -2.914833 0.136353 ; 3.130682
Dipole Chi^2 score : 0.001816 : GOOD


 == Fitting torsion H1-C2-C1-O1 ==

Duplicating types..
Creating new type hc_0 from hc for atom H1
Creating new type c3_0 from c3 for atom C2
Creating new type c_0 from c for atom C1
Creating new type o_0 from o for atom O1
 Dih H1-C2-C1-O1 and H1-C2-C1-O1 are equivalent 
 Dih H1-C2-C1-O1 and H2-C2-C1-O1 are equivalent 


Torsion H1-C2-C1-O1 Chi^2 score : 0.073413 : GOOD

 == Fitting torsion H1-C2-C4-C5 ==

Duplicating types..
Creating new type c3_1 from c3 for atom C4
Creating new type c3_2 from c3 for atom C5
 Dih H1-C2-C4-C5 and H1-C2-C4-C5 are equivalent 
 Dih H1-C2-C4-C5 and H2-C2-C4-C5 are equivalent 


Torsion H1-C2-C4-C5 Chi^2 score : 3.913892 : GOOD

 == Fitting torsion C2-C4-C5-H5 ==

Duplicating types..
Creating new type hc_1 from hc for atom H5
 Dih C2-C4-C5-H5 and C2-C4-C5-H5 are equivalent 
 Dih C2-C4-C5-H5 and H6-C5-C4-C2 are equivalent 


Torsion C2-C4-C5-H5 Chi^2 score : 0.909871 : GOOD

 == Fitting torsion H5-C5-C6-H7 ==

Duplicating types..
Creating new type c3_3 from c3 for atom C6
Creating new type hc_2 from hc for atom H7
 Dih H5-C5-C6-H7 and H5-C5-C6-H7 are equivalent 
 Dih H5-C5-C6-H7 and H5-C5-C6-H8 are equivalent 
 Dih H5-C5-C6-H7 and H6-C5-C6-H7 are equivalent 
 Dih H5-C5-C6-H7 and H6-C5-C6-H8 are equivalent 


Torsion H5-C5-C6-H7 Chi^2 score : 0.041247 : GOOD
 == Diagnostic Energies == 

 Bond     : 0.786403
 Angle    : 1.456718
 Dihedral : 5.059983
 Improper : 0.000000
 Electro  : -81.614420
 VdW      : 1.032518


 == Output to parameters/GAFF2/cc-pVTZ ==

